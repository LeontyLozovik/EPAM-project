<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileCabinetApp</name>
    </assembly>
    <members>
        <member name="T:FileCabinetApp.AppCommandRequest">
            <summary>
            Represent requests of FileCabinetApp.
            </summary>
        </member>
        <member name="P:FileCabinetApp.AppCommandRequest.Command">
            <summary>
            Gets or sets get or set app command.
            </summary>
            <value>App command.</value>
        </member>
        <member name="P:FileCabinetApp.AppCommandRequest.Parameters">
            <summary>
            Gets or sets get or set app parameters.
            </summary>
            <value>App parametrs.</value>
        </member>
        <member name="T:FileCabinetApp.CommandHandlerBase">
            <summary>
            Represent hendlers of app commonds.
            </summary>
        </member>
        <member name="F:FileCabinetApp.CommandHandlerBase.nextHandler">
            <summary>
            Next command handler.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlerBase.SetNext(FileCabinetApp.ICommandHandler)">
            <summary>
            Next handler if this handler can't handle.
            </summary>
            <param name="commandHandler">Next handler.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlerBase.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle request.
            </summary>
            <param name="request">request to handle.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.CreateCommandHandler">
            <summary>
            Handle create command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CreateCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.CreateCommandHandler"/> class.
            </summary>
            <param name="service">service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CreateCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle create command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.EditCommandHandler">
            <summary>
            Handle edit command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.EditCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.EditCommandHandler"/> class.
            </summary>
            <param name="service">service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.EditCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle edit command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExitCommandHandler">
            <summary>
            Handle exit command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExitCommandHandler.#ctor(System.Action{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExitCommandHandler"/> class.
            </summary>
            <param name="exit">Exit function.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExitCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle exit command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ExportCommandHandler">
            <summary>
            Handle export command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExportCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ExportCommandHandler"/> class.
            </summary>
            <param name="service">service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ExportCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle export command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.FindCommandHandler">
            <summary>
            Handle find command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.FindCommandHandler.#ctor(FileCabinetApp.IFileCabinetService,System.Action{System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord}})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.FindCommandHandler"/> class.
            </summary>
            <param name="service">service to work with.</param>
            <param name="print">print function.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.FindCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle find command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.HelpCommandHandler">
            <summary>
            Handle help command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.HelpCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle help command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ImportCommandHandler">
            <summary>
            Handle import command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ImportCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ImportCommandHandler"/> class.
            </summary>
            <param name="service">service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ImportCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle import command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ListCommandHandler">
            <summary>
            Handle list command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ListCommandHandler.#ctor(FileCabinetApp.IFileCabinetService,System.Action{System.Collections.Generic.IEnumerable{FileCabinetApp.FileCabinetRecord}})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ListCommandHandler"/> class.
            </summary>
            <param name="service">service to work with.</param>
            <param name="print">print function.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ListCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle list command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.MissedCommandHandler">
            <summary>
            Handle missed command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.MissedCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle missed command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.PurgeCommandHandler">
            <summary>
            Handle purge command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.PurgeCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.PurgeCommandHandler"/> class.
            </summary>
            <param name="service">service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.PurgeCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle purge command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.RemoveCommandHandler">
            <summary>
            Handle remove command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.RemoveCommandHandler.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.RemoveCommandHandler"/> class.
            </summary>
            <param name="service">service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.RemoveCommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle remove command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase">
            <summary>
            Handler for commands that uses IFileCabinetServise.
            </summary>
        </member>
        <member name="F:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.service">
            <summary>
            Instance of service.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase"/> class.
            </summary>
            <param name="cabinetService">using service.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.ReadInput``1(System.Func{System.String,System.Tuple{System.Boolean,System.String,``0}},System.Func{``0,System.Tuple{System.Boolean,System.String}})">
            <summary>
            Read all filds of record.
            </summary>
            <typeparam name="T">returning type.</typeparam>
            <param name="converter">one of converters.</param>
            <param name="validator">one of validators.</param>
            <returns>converted and validate fild of record.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.StringConverter(System.String)">
            <summary>
            Convert input param to string.
            </summary>
            <param name="toConvert">string to convert.</param>
            <returns>converted string.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.DateConverter(System.String)">
            <summary>
            Convert input param to date.
            </summary>
            <param name="toConvert">string to convert.</param>
            <returns>converted date.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.ShortConverter(System.String)">
            <summary>
            Convert input param to short.
            </summary>
            <param name="toConvert">string to convert.</param>
            <returns>converted short.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.DecimalConverter(System.String)">
            <summary>
            Convert input param to decimal.
            </summary>
            <param name="toConvert">string to convert.</param>
            <returns>converted decimal.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.CharConverter(System.String)">
            <summary>
            Convert input param to char.
            </summary>
            <param name="toConvert">string to convert.</param>
            <returns>converted char.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.FirstNameValidator(System.String)">
            <summary>
            Validate firstname.
            </summary>
            <param name="firstName">string to validate.</param>
            <returns>true - correct, false - incorrect.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.LastNameValidator(System.String)">
            <summary>
            Validate lastname.
            </summary>
            <param name="lastName">string to validate.</param>
            <returns>true - correct, false - incorrect.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.DateOfBirthValidator(System.DateTime)">
            <summary>
            Validate date.
            </summary>
            <param name="birthday">date to validate.</param>
            <returns>true - correct, false - incorrect.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.NumberOfChildrenValidator(System.Int16)">
            <summary>
            Validate number of childres.
            </summary>
            <param name="children">number of children to validate.</param>
            <returns>true - correct, false - incorrect.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.AverageSalaryValidator(System.Decimal)">
            <summary>
            Validate salary.
            </summary>
            <param name="salary">salary to validate.</param>
            <returns>true - correct, false - incorrect.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.SexValidator(System.Char)">
            <summary>
            Validate sex.
            </summary>
            <param name="sex">sex to validate.</param>
            <returns>true - correct, false - incorrect.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.StatCommandHandle">
            <summary>
            Handle stat command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.StatCommandHandle.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.StatCommandHandle"/> class.
            </summary>
            <param name="service">service to work with.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.StatCommandHandle.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle stat command.
            </summary>
            <param name="request">request with command and param.</param>
        </member>
        <member name="T:FileCabinetApp.ICommandHandler">
            <summary>
            Represent hendlers of app commonds.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ICommandHandler.SetNext(FileCabinetApp.ICommandHandler)">
            <summary>
            Next handler if this handler can't handle.
            </summary>
            <param name="commandHandler">Next handler.</param>
        </member>
        <member name="M:FileCabinetApp.ICommandHandler.Handle(FileCabinetApp.AppCommandRequest)">
            <summary>
            Handle request.
            </summary>
            <param name="request">request to handle.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetFilesystemService">
            <summary>
            Do manipulations with records in file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.#ctor(System.IO.FileStream,FileCabinetApp.RecordValidators.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetFilesystemService"/> class.
            </summary>
            <param name="fileStream">param to initialization fileStream fild.</param>
            <param name="validator">param to initialization validator fild.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.IsIdExist(System.Int32)">
            <summary>
            Check if currient Id exist.
            </summary>
            /// <param name="id">Id to check.</param>
            <returns>True if record with this id exist, false if not exist.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.CreateRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Create a new record with inputed parameters.
            </summary>
            <param name="record">Record to create.</param>
            <returns>Id of created record.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetRecords">
            <summary>
            Return all existing records.
            </summary>
            <returns>all existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetStat(System.Boolean)">
            <summary>
            Return number of existing records.
            </summary>
            <returns>number of existing records.</returns>
            <param name="writeNumberRemoverRecords">Write or don't write number of removedrecords.</param>>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Edit record by entered Id.
            </summary>
            <param name="newRecord">New record that replace old record.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByFirstName(System.String)">
            <summary>
            Find all records with entered firstname.
            </summary>
            <param name="firstName">firstname to find.</param>
            <returns>all records with entered firstname.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByLastName(System.String)">
            <summary>
            Find all records with entered lastname.
            </summary>
            <param name="lastName">lastname to find.</param>
            <returns>all records with entered lastname.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FindByBirthday(System.String)">
            <summary>
            Find all records with entered dateofbirth.
            </summary>
            <param name="birthday">dateofbirth to find.</param>
            <returns>all records with entered dateofbirth.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.MakeSnapshot">
            <summary>
            Make a snapshot of current state.
            </summary>
            <returns>instance of FileCabinetServiceSnapshot class.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Add records to service.
            </summary>
            <param name="snapshot">item of FileCabinetServiceSnapshot were records read.</param>
            <returns>number of imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Remove(System.Int32)">
            <summary>
            Remove record from service.
            </summary>
            <param name="recordId">Id of record to remove.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Defragment">
            <summary>
            Difragment file with records in FileCabinetFilesystemService.
            </summary>
            <returns>Number of difragmented records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Dispose">
            <summary>
            Implement method of IDispose.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.Dispose(System.Boolean)">
            <summary>
            Implement method of IDispose.
            </summary>
            <param name="disposing">dispose or not dispose.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.WriteOneRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Write one record to file from currient position.
            </summary>
            <param name="record">recort to write.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetOneRecord">
            <summary>
            Get one record from the file starting from currient position.
            </summary>
            <returns>One record from file.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.FirstFreeId">
            <summary>
            Check if there is any free Id of records which were removed.
            </summary>
            <returns>Next id to use.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetOffsetOfRecord(System.Int32)">
            <summary>
            Returned offset of record with given Id.
            </summary>
            <param name="id">Id of record.</param>
            <returns>Offset of record with this Id.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.SetCorrectOrder">
            <summary>
            Set correct oder of records before difragmentation.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetFilesystemService.GetNumberOfRemovedRecords">
            <summary>
            Get number of removed records in file.
            </summary>
            <returns>number of removed records.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetMemoryService">
            <summary>
            Do manipulations with records in memory.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.#ctor(FileCabinetApp.RecordValidators.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetMemoryService"/> class.
            </summary>
            <param name="validator">required validator.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.IsIdExist(System.Int32)">
            <summary>
            Check if currient Id exist.
            </summary>
            /// <param name="id">Id to check.</param>
            <returns>True if record with this id exist, false if not exist.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.CreateRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Create a new record with inputed parameters.
            </summary>
            <param name="record">Record to create.</param>
            <returns>Id of created record.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetRecords">
            <summary>
            Return all existing records.
            </summary>
            <returns>all existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.GetStat(System.Boolean)">
            <summary>
            Return number of existing records.
            </summary>
            <returns>number of existing records.</returns>
            <param name="writeNumberRemoverRecords">Write or don't write number of removedrecords.</param>>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Edit record by entered Id.
            </summary>
            <param name="newRecord">New record that replace old record.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByFirstName(System.String)">
            <summary>
            Find all records with entered firstname.
            </summary>
            <param name="firstName">firstname to find.</param>
            <returns>all records with entered firstname.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByLastName(System.String)">
            <summary>
            Find all records with entered lastname.
            </summary>
            <param name="lastName">lastname to find.</param>
            <returns>all records with entered lastname.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.FindByBirthday(System.String)">
            <summary>
            Find all records with entered dateofbirth.
            </summary>
            <param name="birthday">dateofbirth to find.</param>
            <returns>all records with entered dateofbirth.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.MakeSnapshot">
            <summary>
            Make a snapshot of current state.
            </summary>
            <returns>instance of FileCabinetServiceSnapshot class.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Add records to service.
            </summary>
            <param name="snapshot">item of FileCabinetServiceSnapshot were records read.</param>
            <returns>number of imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Remove(System.Int32)">
            <summary>
            Remove record from service.
            </summary>
            <param name="recordId">Id of record to remove.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.Defragment">
            <summary>
            Difragment file with records in FileCabinetFilesystemService.
            </summary>
            <returns>0 - because there is nothing to defragment.</returns>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.AddNamesToDictionary(System.String,FileCabinetApp.FileCabinetRecord,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{FileCabinetApp.FileCabinetRecord}})">
            <summary>
            Add records with firtname or lastname key to the dictionary.
            </summary>
            <param name="name">firstname or lastname key.</param>
            <param name="record">record to add.</param>
            <param name="dictionary">dictionary to add.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.AddDateToDictionary(System.DateTime,FileCabinetApp.FileCabinetRecord,System.Collections.Generic.Dictionary{System.DateTime,System.Collections.Generic.List{FileCabinetApp.FileCabinetRecord}})">
            <summary>
            Add records with dateofbirth key to the dictionary.
            </summary>
            <param name="date">dateofbirth key.</param>
            <param name="record">record to add.</param>
            <param name="dictionary">dictionary to add.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.ReindecsingId">
            <summary>
            Reindecsing records in list.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetMemoryService.RemoveFromDictionaries(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Edit values in all dictionaries after user edited record.
            </summary>
            <param name="incorrectRecord">Record to remove from dictionaries.</param>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecord">
            <summary>
            Represents records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecord"/> class.
            </summary>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Id">
            <summary>
            Gets or sets id of record.
            </summary>
            <value> Id of record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.FirstName">
            <summary>
            Gets or sets firstname in record.
            </summary>
            <value>Firstname in record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.LastName">
            <summary>
            Gets or sets lastname in record.
            </summary>
            <value>Lastname in record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.DateOfBirth">
            <summary>
            Gets or sets dateofbirth in record.
            </summary>
            <value>Dateofbirth in record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Children">
            <summary>
            Gets or sets number of childrens in record.
            </summary>
            <value>Number of childrens in record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.AverageSalary">
            <summary>
            Gets or sets average salary in record.
            </summary>
            <value>Average salary in record.</value>
        </member>
        <member name="P:FileCabinetApp.FileCabinetRecord.Sex">
            <summary>
            Gets or sets sex in record.
            </summary>
            <value>Sex in record.</value>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordCsvReader">
            <summary>
            Read records from csv file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvReader.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvReader"/> class.
            </summary>
            <param name="reader">indent to inicializ this StramReader.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvReader.ReadAll">
            <summary>
            Read records from csv file.
            </summary>
            <returns>list of readed records.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordCsvWriter">
            <summary>
            Write record to file in csv format.
            </summary>
        </member>
        <member name="F:FileCabinetApp.FileCabinetRecordCsvWriter.writer">
            <summary>
            Writer - write record to the file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordCsvWriter"/> class.
            </summary>
            <param name="textWriter">param to initialize fild writer.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.Write(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Write record to csv file.
            </summary>
            <param name="record">record to write.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordCsvWriter.WriteTemplate">
            <summary>
            Write name of all filds of record.
            </summary>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlReader">
            <summary>
            Read records from xml file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlReader.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordXmlReader"/> class.
            </summary>
            <param name="reader">indent to inicializ this StramReader.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlReader.ReadAll">
            <summary>
            Read records from csv file.
            </summary>
            <returns>list of readed records.</returns>
        </member>
        <member name="T:FileCabinetApp.FileCabinetRecordXmlWriter">
            <summary>
            Write record to file in xml format.
            </summary>
        </member>
        <member name="F:FileCabinetApp.FileCabinetRecordXmlWriter.writer">
            <summary>
            Writer - write record to the file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.#ctor(System.Xml.XmlWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetRecordXmlWriter"/> class.
            </summary>
            <param name="xmlWriter">param to initialize fild writer.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.Write(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Write record to csv file.
            </summary>
            <param name="record">record to write.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.Start">
            <summary>
            Print start of the xml file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetRecordXmlWriter.End">
            <summary>
            Close XmlWriter and due to settings write end of xml file.
            </summary>
        </member>
        <member name="T:FileCabinetApp.FileCabinetServiceSnapshot">
            <summary>
            Service class for crating snapshots.
            </summary>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.#ctor(FileCabinetApp.FileCabinetRecord[])">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.FileCabinetServiceSnapshot"/> class.
            </summary>
            <param name="records">records to initialize new istance of this class.</param>
        </member>
        <member name="P:FileCabinetApp.FileCabinetServiceSnapshot.Records">
            <summary>
            Gets readOnlyColection of records.
            </summary>
            <value>Collection of records readed from file.</value>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.SaveToCsv(System.IO.StreamWriter)">
            <summary>
            Save all records to csv file.
            </summary>
            <param name="streamWriter">Stream Writer to write records to file.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.SaveToXml(System.IO.StreamWriter)">
            <summary>
            Save all records to xml file.
            </summary>
            <param name="streamWriter">Stream Writer to write records to file.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.LoadFromCsv(System.IO.StreamReader)">
            <summary>
            Loads from records from csv file.
            </summary>
            <param name="streamReader">stream to read.</param>
        </member>
        <member name="M:FileCabinetApp.FileCabinetServiceSnapshot.LoadFromXml(System.IO.StreamReader)">
            <summary>
            Loads from records from xml file.
            </summary>
            <param name="streamReader">stream to read.</param>
        </member>
        <member name="T:FileCabinetApp.IFileCabinetService">
            <summary>
            Represent rules for working with FileCabinetRecord.
            </summary>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.IsIdExist(System.Int32)">
            <summary>
            Check if currient Id exist.
            </summary>
            <param name="id">Id to check.</param>
            <returns>True if record with this id exist, false if not exist.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.CreateRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Create a new record with inputed parameters.
            </summary>
            <param name="record">Record to create.</param>
            <returns>Id of created record.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetRecords">
            <summary>
            Return all existing records.
            </summary>
            <returns>all existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.GetStat(System.Boolean)">
            <summary>
            Return number of existing records.
            </summary>
            <returns>number of existing records.</returns>
            <param name="writeNumberRemoverRecords">Write or don't write number of removedrecords.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Edit record by entered Id.
            </summary>
            <param name="newRecord">New record that replace old record.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByFirstName(System.String)">
            <summary>
            Find all records with entered firstname.
            </summary>
            <param name="firstName">firstname to find.</param>
            <returns>all records with entered firstname.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByLastName(System.String)">
            <summary>
            Find all records with entered lastname.
            </summary>
            <param name="lastName">lastname to find.</param>
            <returns>all records with entered lastname.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.FindByBirthday(System.String)">
            <summary>
            Find all records with entered dateofbirth.
            </summary>
            <param name="birthday">dateofbirth to find.</param>
            <returns>all records with entered dateofbirth.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.MakeSnapshot">
            <summary>
            Make a snapshot of current state.
            </summary>
            <returns>instance of FileCabinetServiceSnapshot class.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Add records from to service.
            </summary>
            <param name="snapshot">item of FileCabinetServiceSnapshot were records read.</param>
            <returns>number of imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Remove(System.Int32)">
            <summary>
            Remove record from service.
            </summary>
            <param name="recordId">Id of record to remove.</param>
        </member>
        <member name="M:FileCabinetApp.IFileCabinetService.Defragment">
            <summary>
            Difragment file with records in FileCabinetFilesystemService.
            </summary>
            <returns>Number of difragmented records.</returns>
        </member>
        <member name="T:FileCabinetApp.Program">
            <summary>
            Get user requests and calls the desired hendler.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Program.Main(System.String[])">
            <summary>
            Get user comand from cmd and call functions to process them.
            </summary>
            <param name="args">parameters of "Main" function.</param>
        </member>
        <member name="M:FileCabinetApp.Program.GetValidationType">
            <summary>
            Get currient validation type.
            </summary>
            <returns>Validation type.</returns>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.AverageSalaryValidator">
            <summary>
            Validate average selary.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.AverageSalaryValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.AverageSalaryValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.AverageSalaryValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.AverageSalaryValidator"/> class.
            </summary>
            <param name="min">min salary.</param>
            <param name="max">max selary.</param>
        </member>
        <member name="P:FileCabinetApp.RecordValidators.AverageSalaryValidator.MaxSalary">
            <summary>
            Gets or sets MaxSalary.
            </summary>
            <value>max selary.</value>
        </member>
        <member name="P:FileCabinetApp.RecordValidators.AverageSalaryValidator.MinSalary">
            <summary>
            Gets or sets MinSalary.
            </summary>
            <value>min salary.</value>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.AverageSalaryValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate average salary.
            </summary>
            <param name="record">record to validate.</param>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.CompositeValidator">
            <summary>
            Execute set of validation.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.CompositeValidator.#ctor(System.Collections.Generic.IEnumerable{FileCabinetApp.RecordValidators.IRecordValidator})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.CompositeValidator"/> class.
            </summary>
            <param name="validator">List of validators.</param>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.CompositeValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Execute validation.
            </summary>
            <param name="record">record to vilidate.</param>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.CreateValidators">
            <summary>
            Extantion methods for creation validators.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.CreateValidators.CreateDefault(FileCabinetApp.RecordValidators.ValidatorBuilder,System.Action{FileCabinetApp.RecordValidators.ValidationType})">
            <summary>
            Create default validator.
            </summary>
            <param name="validatorBuilder">Instance to build validator.</param>
            <param name="setValidation">Function that set validation type.</param>
            <returns>List of validators.</returns>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.CreateValidators.CreateDefault(FileCabinetApp.RecordValidators.ValidatorBuilder)">
            <summary>
            Create default validator.
            </summary>
            <param name="validatorBuilder">Instance to build validator.</param>
            <returns>List of validators.</returns>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.CreateValidators.CreateCustom(FileCabinetApp.RecordValidators.ValidatorBuilder,System.Action{FileCabinetApp.RecordValidators.ValidationType})">
            <summary>
            Create custom validator.
            </summary>
            <param name="validatorBuilder">Instance to build validator.</param>
            /// <param name="setValidation">Function that set validation type.</param>
            <returns>List of validators.</returns>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.DateOfBirthValidator">
            <summary>
            Validate date of birth.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.DateOfBirthValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.DateOfBirthValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.DateOfBirthValidator.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.DateOfBirthValidator"/> class.
            </summary>
            <param name="from">earliest date.</param>
            <param name="to">latest date.</param>
        </member>
        <member name="P:FileCabinetApp.RecordValidators.DateOfBirthValidator.From">
            <summary>
            Gets or sets latest date.
            </summary>
            <value>latest date.</value>
        </member>
        <member name="P:FileCabinetApp.RecordValidators.DateOfBirthValidator.To">
            <summary>
            Gets or sets earliest date.
            </summary>
            <value>earliest date.</value>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.DateOfBirthValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate date of birth.
            </summary>
            <param name="record">record to validate.</param>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.FirstNameValidator">
            <summary>
            Validate firstname.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.FirstNameValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.FirstNameValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.FirstNameValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.FirstNameValidator"/> class.
            </summary>
            <param name="min">min lenght of firstname.</param>
            <param name="max">max lenght of firstname.</param>
        </member>
        <member name="P:FileCabinetApp.RecordValidators.FirstNameValidator.MaxLenght">
            <summary>
            Gets or sets MaxLenght.
            </summary>
            <value>max lenght of firstname.</value>
        </member>
        <member name="P:FileCabinetApp.RecordValidators.FirstNameValidator.MinLenght">
            <summary>
            Gets or sets MinLenght.
            </summary>
            <value>min lenght of firstname.</value>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.FirstNameValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate firstname.
            </summary>
            <param name="record">record to validate.</param>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.IRecordValidator">
            <summary>
            Discribes the rules for creating validation classes.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.IRecordValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate incoming parameters of record.
            </summary>
            <param name="record">record whose parametrs should be validate.</param>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.LastNameValidator">
            <summary>
            Validate lastname.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.LastNameValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.LastNameValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.LastNameValidator.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.LastNameValidator"/> class.
            </summary>
            <param name="min">min lenght of lastname.</param>
            <param name="max">max lenght of lastname.</param>
        </member>
        <member name="P:FileCabinetApp.RecordValidators.LastNameValidator.MaxLenght">
            <summary>
            Gets or sets MaxLenght.
            </summary>
            <value>max lenght of lastname.</value>
        </member>
        <member name="P:FileCabinetApp.RecordValidators.LastNameValidator.MinLenght">
            <summary>
            Gets or sets MinLenght.
            </summary>
            <value>min lenght of firstname.</value>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.LastNameValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate lastname.
            </summary>
            <param name="record">record to validate.</param>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.NumberOfChildrenValidator">
            <summary>
            Validate number of children.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.NumberOfChildrenValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.NumberOfChildrenValidator"/> class.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.NumberOfChildrenValidator.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.RecordValidators.NumberOfChildrenValidator"/> class.
            </summary>
            <param name="number">min number of children.</param>
        </member>
        <member name="P:FileCabinetApp.RecordValidators.NumberOfChildrenValidator.MinNumber">
            <summary>
            Gets or sets min number of children.
            </summary>
            <value>number of children.</value>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.NumberOfChildrenValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate number of children.
            </summary>
            <param name="record">record to validate.</param>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.SexValidator">
            <summary>
            Valiate sex.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.SexValidator.ValidateParameters(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Validate sex.
            </summary>
            <param name="record">record to validate.</param>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.ValidationType">
            <summary>
            Represent existed types of validation.
            </summary>
        </member>
        <member name="F:FileCabinetApp.RecordValidators.ValidationType.Default">
            <summary>
            Default type of validation.
            </summary>
        </member>
        <member name="F:FileCabinetApp.RecordValidators.ValidationType.Custom">
            <summary>
            Custom type of validation.
            </summary>
        </member>
        <member name="T:FileCabinetApp.RecordValidators.ValidatorBuilder">
            <summary>
            Build validator.
            </summary>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.ValidatorBuilder.ValidateFirstName(FileCabinetApp.RecordValidators.FirstNameValidator)">
            <summary>
            Add firstname validator to list of validators.
            </summary>
            <param name="validator">validator to add.</param>
            <returns>Object of ValidatorBuilder with added firstname validator.</returns>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.ValidatorBuilder.ValidateLastName(FileCabinetApp.RecordValidators.LastNameValidator)">
            <summary>
            Add lastname validator to list of validators.
            </summary>
            <param name="validator">validator to add.</param>
            <returns>Object of ValidatorBuilder with added lastname validator.</returns>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.ValidatorBuilder.ValidateDateOfBirth(FileCabinetApp.RecordValidators.DateOfBirthValidator)">
            <summary>
            Add date of birth validator to list of validators.
            </summary>
            <param name="validator">validator to add.</param>
            <returns>Object of ValidatorBuilder with added date of birth validator.</returns>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.ValidatorBuilder.ValidateNumberOfChildren(FileCabinetApp.RecordValidators.NumberOfChildrenValidator)">
            <summary>
            Add number of children validator to list of validators.
            </summary>
            <param name="validator">validator to add.</param>
            <returns>Object of ValidatorBuilder with added number of children validator.</returns>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.ValidatorBuilder.ValidateAveragesalary(FileCabinetApp.RecordValidators.AverageSalaryValidator)">
            <summary>
            Add average salary validator to list of validators.
            </summary>
            <param name="validator">validator to add.</param>
            <returns>Object of ValidatorBuilder with added average salary validator.</returns>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.ValidatorBuilder.ValidateSex(FileCabinetApp.RecordValidators.SexValidator)">
            <summary>
            Add sex validator to list of validators.
            </summary>
            <param name="validator">validator to add.</param>
            <returns>Object of ValidatorBuilder with added sex validator.</returns>
        </member>
        <member name="M:FileCabinetApp.RecordValidators.ValidatorBuilder.Create">
            <summary>
            Create validator with all supvalidators.
            </summary>
            <returns>validator.</returns>
        </member>
        <member name="T:FileCabinetApp.ServiceMeter">
            <summary>
            Wrapper for FileCabinet services for measuring run time.
            </summary>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.#ctor(FileCabinetApp.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.ServiceMeter"/> class.
            </summary>
            <param name="service">one of FileCabinet services.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.CreateRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Create a new record with inputed parameters.
            </summary>
            <param name="record">Record to create.</param>
            <returns>Id of created record.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.Defragment">
            <summary>
            Difragment file with records in FileCabinetFilesystemService.
            </summary>
            <returns>Number of difragmented records.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.EditRecord(FileCabinetApp.FileCabinetRecord)">
            <summary>
            Edit record by entered Id.
            </summary>
            <param name="newRecord">New record that replace old record.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.FindByBirthday(System.String)">
            <summary>
            Find all records with entered dateofbirth.
            </summary>
            <param name="birthday">dateofbirth to find.</param>
            <returns>all records with entered dateofbirth.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.FindByFirstName(System.String)">
            <summary>
            Find all records with entered firstname.
            </summary>
            <param name="firstName">firstname to find.</param>
            <returns>all records with entered firstname.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.FindByLastName(System.String)">
            <summary>
            Find all records with entered lastname.
            </summary>
            <param name="lastName">lastname to find.</param>
            <returns>all records with entered lastname.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.GetRecords">
            <summary>
            Return all existing records.
            </summary>
            <returns>all existing records.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.GetStat(System.Boolean)">
            <summary>
            Return number of existing records.
            </summary>
            <returns>number of existing records.</returns>
            <param name="writeNumberRemoverRecords">Write or don't write number of removedrecords.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.IsIdExist(System.Int32)">
            <summary>
            Check if currient Id exist.
            </summary>
            <param name="id">Id to check.</param>
            <returns>True if record with this id exist, false if not exist.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.MakeSnapshot">
            <summary>
            Make a snapshot of current state.
            </summary>
            <returns>instance of FileCabinetServiceSnapshot class.</returns>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.Remove(System.Int32)">
            <summary>
            Remove record from service.
            </summary>
            <param name="recordId">Id of record to remove.</param>
        </member>
        <member name="M:FileCabinetApp.ServiceMeter.Restore(FileCabinetApp.FileCabinetServiceSnapshot)">
            <summary>
            Add records from to service.
            </summary>
            <param name="snapshot">item of FileCabinetServiceSnapshot were records read.</param>
            <returns>number of imported records.</returns>
        </member>
    </members>
</doc>
